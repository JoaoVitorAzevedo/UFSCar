module add(a,b,out);
	input [7:0] a,b;
	output [7:0] out;
	assign out = a + b;
endmodule




----------------
input a,b;
output [7,0] c,e;
output [3:0] d;
		// d[3], d[2] , d[1] , d[0]



---------------
reg a;   	 // registrador a
reg [3:0} b,c;  //  registradores de 4 bits b,c
wire d;	       //   sinal da fiacao, d
wire [7:0] e; //    sinal de 8 bits da fiação, e


Registradores: Drivers que guardam valores
Wires:         Drivers que apenas conectam 2 pontos
Comandos:      assign, assign + function, always
	combinatorios: assign e always
	sequenciais:   always

assign add_out = a + b; // soma
assign or_out  = a|b|c;	// or de 3 entradas


( right shift e left shift )
 dividindo vs multiplicando 

assign out = (enable) ? data:1'bz;
// Exemplo de um buffer tri-state
quando enable é 1, data é conduzido para a saída, senão ocorre alta impedância.


operações de comparação
reg [3:0] a,b;
wire comp;  // quando a igual a b , comp = 1
assign comp = (a == b);


assign and4 = &a; ( and de todos os bits que pertencem a a)

assign {a,b} = c;		//Concatenacao
assign {cout, out} = a + b;    // Concatenacao


